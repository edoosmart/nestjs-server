version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://admin:password123@mongo:27017/notification?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./migrations:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_DATABASE=notification
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    healthcheck:
      test: ["CMD", "mongosh", "mongodb://admin:password123@localhost:27017/admin?authSource=admin", "--eval", "'db.runCommand(\"ping\").ok'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  mongo-seed:
    image: mongo:latest
    volumes:
      - ./migrations:/migrations
    command: mongosh "mongodb://admin:password123@mongo:27017/notification?authSource=admin" /migrations/init-mongo.js
    depends_on:
      mongo:
        condition: service_healthy

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_BASICAUTH_USERNAME=dev
      - ME_CONFIG_BASICAUTH_PASSWORD=dev123
    depends_on:
      mongo:
        condition: service_healthy

volumes:
  redis_data:
  mongodb_data: